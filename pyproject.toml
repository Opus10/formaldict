[build-system]
requires = ["poetry_core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.coverage.run]
branch = true
source = ["formaldict"]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "raise AssertionError",
    "raise NotImplementedError",
    "pass",
    "pytest.mark.skip",
    "@(typing\\.)?overload",
]
show_missing = true
fail_under = 100

[tool.poetry]
name = "formaldict"
packages = [
  { include = "formaldict" }
]
exclude = [
  "*/tests/"
]
version = "1.0.6"
description = "Formal structured dictionaries parsed from a schema"
authors = ["Wes Kendall"]
classifiers = [
  "Intended Audience :: Developers",
  "Operating System :: OS Independent",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
  "Programming Language :: Python :: 3 :: Only",
]
license = "BSD-3-Clause"
readme = "README.md"
homepage = "https://github.com/Opus10/formaldict"
repository = "https://github.com/Opus10/formaldict"
documentation = "https://formaldict.readthedocs.io"

[tool.poetry.dependencies]
python = ">=3.8.0,<4"
kmatch = ">=0.3.0"
python-dateutil = ">=2.8.1"
prompt-toolkit = ">=3.0.2"

[tool.poetry.dev-dependencies]
git-tidy = "1.2.0"
pytest = "7.4.2"
pytest-cov = "4.1.0"
pytest-dotenv = "0.5.2"
pytest-mock = "3.7.0"
tox = "4.11.3"
ruff = "0.3.7"
pyright = "1.1.358"
mkdocs = "1.5.3"
black = "24.4.0"
mkdocs-material = "9.5.18"
mkdocstrings-python = "1.9.2"
footing = "*"
setuptools = "*"
poetry-core = "*"
typing-extensions = "4.11.0"
pyyaml = "5.3.1"

[tool.pytest.ini_options]
xfail_strict = true
testpaths = "formaldict/tests"
norecursedirs = ".venv"

[tool.ruff]
lint.select = ["E", "F", "B", "I", "G", "C4"]
line-length = 99
target-version = "py38"

[tool.pyright]
exclude = [
    "**/node_modules",
    "**/__pycache__",
    "src/experimental",
    "src/typestubs",
    "**/migrations/**",
    "**/tests/**",
]
pythonVersion = "3.8"
typeCheckingMode = "standard"
